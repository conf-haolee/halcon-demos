<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="20.11.1.0">
<procedure name="main">
<interface/>
<body>
<c></c>
<c>* 橡胶环图像数据处理 用单个圆环构造成多个圆环</c>
<c>* 2024/10/12  随机图片组合</c>
<c>* step1 生成一个白色背景图像 </c>
<l>Width := 512</l>
<l>Height := 512</l>
<c>* 生成一个纯白背景的图片</c>
<l>gen_image_const(WhiteImage, 'byte', Width, Height)</l>
<c>* 设置图片的所有像素为 255 (纯白)</c>
<l>gen_rectangle1(Rectangle, 0, 0, Height, Width)</l>
<l>get_region_points(Rectangle, Rows, Columns)</l>
<l>get_grayval(WhiteImage, Rows, Columns, Grayval)</l>
<c>* 把默认的黑色图像填充成白色</c>
<l>tuple_length(Grayval, Length)</l>
<l>Grayval[0:Length-1] := 255</l>
<l>set_grayval(WhiteImage, Rows, Columns, Grayval)</l>
<c></c>
<c>* 设置一个组合数</c>
<l>Combination := 4</l>
<c></c>
<c>* step2 读取图片</c>
<c>* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l>list_files ('D:/GXNU/9.ImageSet/ruber_circle_classify_set03/Num1', ['files','follow_links'], ImageFiles)</l>
<l>tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima|hobj)$','ignore_case'], ImageFiles)</l>
<l>for Index := 0 to 10000 - 1 by 1</l>
<c>    </c>
<l>    tuple_row := gen_tuple_const(Combination,0)</l>
<l>    tuple_col := gen_tuple_const(Combination,0)</l>
<c>    </c>
<c>    * 重全白背景</c>
<l>    Grayval[0:Length-1] := 255</l>
<l>    set_grayval(WhiteImage, Rows, Columns, Grayval)</l>
<c>    </c>
<c>    * 每个圆环向 白色背景中绘制 一次</c>
<l>    for j := 0 to Combination - 1 by 1</l>
<l>        tuple_rand(1, Rand1)</l>
<l>        random_index := |ImageFiles| * Rand1[0]</l>
<c>        * 对数字四舍五入处理</c>
<l>        random_index := number(random_index$'.0f') </l>
<l>        if(random_index == |ImageFiles|)</l>
<l>            random_index := |ImageFiles| - 1</l>
<l>        endif</l>
<c>        * 读取第一张 图像中的圆环blob</c>
<l>        read_image (Image, ImageFiles[random_index]) </l>
<l>        rgb1_to_gray(Image, GrayImage)</l>
<l>        threshold(GrayImage, Region, 0, 120)</l>
<l>        connection(Region, ConnectedRegions)</l>
<l>        select_obj(ConnectedRegions, ObjectSelected, 1)</l>
<c>        </c>
<c>        * 获取第一张图片blob的 最小外接矩形</c>
<l>        smallest_rectangle1(ObjectSelected, Row1, Column1, Row2, Column2)</l>
<l>        tuple_row[j] := Row2 - Row1 + tuple_row[j]</l>
<l>        tuple_col[j] := Column2 - Column1 + tuple_col[j]</l>
<c>        </c>
<c>        * 裁剪出当前连通域 获取灰度值</c>
<l>        reduce_domain(GrayImage, ObjectSelected, ImageReduced)</l>
<l>        get_region_points(ObjectSelected, Rows1, Columns1)</l>
<l>        get_grayval(ImageReduced, Rows1, Columns1, Grayval1)</l>
<c>        </c>
<c>        * 平移 blob + 随机位置组合</c>
<l>        tuple_rand(2, Rand)</l>
<l>        rand_row := Rand[0] * tuple_row[j]</l>
<l>        rand_col := Rand[1] * tuple_col[j]</l>
<l>        if(rand_row &gt; (Length -10))</l>
<l>            rand_row := 20</l>
<l>        endif</l>
<l>        if(rand_col &gt; (Width -10))</l>
<l>            rand_col := 20</l>
<l>        endif</l>
<l>        Rows1 := Rows1 - Row1 + rand_row</l>
<l>        Columns1 := Columns1 - Column1 + rand_col</l>
<l>*         stop()</l>
<c>        </c>
<c>        * 重新写入橡胶圈数据  这里改成追加两个橡胶圈图像写入。</c>
<l>        set_grayval(WhiteImage, Rows1, Columns1, Grayval1)</l>
<c>        </c>
<l>    endfor</l>
<c>    </c>
<c>    * 保存图片</c>
<l>    tuple_string(Index, '5.5', Stringi)</l>
<l>    filename := 'D:/GXNU/9.ImageSet/halcon_Generate_set05/' + Stringi  + '.bmp'  </l>
<l>    write_image(WhiteImage, 'bmp', 0, filename)</l>
<l>*     stop()</l>
<l>endfor</l>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
