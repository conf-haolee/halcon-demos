<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="20.11.1.0">
<procedure name="main">
<interface/>
<body>
<l>dev_close_window()</l>
<c></c>
<c>* 读取了一副图像</c>
<c></c>
<l>* read_image (Image202312151548395206118, 'C:/Users/haoLee/OneDrive/Desktop/halcon 模板匹配测试/测试模版匹配01/21_1.9橙色O圈/(2023-12-15)(14-42-47-311)_455.bmp')</l>
<l>read_image (Image555, 'C:/Users/haoLee/OneDrive/Desktop/555.bmp')</l>
<c></c>
<l>rgb1_to_gray(Image555, GrayImage)</l>
<l>get_image_size (GrayImage, Width, Height)</l>
<l>dev_open_window (50, 50, Width /4 , Height/4, 'black', WindowHandle)</l>
<l>dev_set_window(WindowHandle)</l>
<l>set_display_font (WindowHandle, 16, 'mono', 'true', 'false')</l>
<c></c>
<c>* 交互式选取 ROI</c>
<l>dev_open_window_fit_image(GrayImage, 100, 100, -1, -1, WindowHandle)</l>
<c></c>
<l>dev_display(GrayImage)</l>
<l>dev_set_draw('margin')</l>
<l>* dev_set_draw('margin')</l>
<l>dev_set_line_width(3)</l>
<l>stop()</l>
<l>draw_rectangle1(WindowHandle, Row1, Column1, Row2, Column2)</l>
<c></c>
<l>gen_rectangle1(Rectangle, Row1, Column1, Row2, Column2)</l>
<c></c>
<l>width:= Column2 - Column1</l>
<l>height:= Row2 -Row1 </l>
<l>reduce_domain(GrayImage, Rectangle, ImageReduced)</l>
<c></c>
<c>* 读取测试图像</c>
<c>* Image Acquisition 02: Code generated by Image Acquisition 02</c>
<l>list_files ('C:/Users/haoLee/OneDrive/Desktop/halcon 模板匹配Demo/测试模版匹配01/绿色O圈', ['files','follow_links'], ImageFiles)</l>
<l>tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima|hobj)$','ignore_case'], ImageFiles)</l>
<l>count_seconds(shape_t1)</l>
<c>*  基于形状的模板匹配</c>
<l>create_shape_model(ImageReduced, 'auto', -0.39, 0.79, 'auto', 'auto', 'use_polarity', 'auto', 'auto', ModelID1)</l>
<l>for Index := 0 to |ImageFiles| - 1 by 1</l>
<l>    read_image (Image, ImageFiles[Index])</l>
<c>    * Image Acquisition 02: Do something</c>
<l>    rgb1_to_gray(Image, GrayImage1)</l>
<l>    dev_close_window()</l>
<l>    dev_open_window_fit_image(GrayImage1, 100, 100, -1, -1, WindowHandle1)</l>
<l>    dev_display(GrayImage1) </l>
<c>    * 应用形状模板并进行匹配  </c>
<l>    find_shape_model(GrayImage1, ModelID1, -0.39, 0.79, 0.5, 80, 0.5, 'least_squares', 0, 0.9, Row, Column, Angle, Score)</l>
<c>    </c>
<l>    tuple_length(Row, Length)</l>
<l>    if(Length == 0)</l>
<l>        dev_disp_text('未匹配到！', 'window', 10, 10, 'black', [], [])</l>
<l>        continue   </l>
<l>    endif</l>
<c>    * 应用匹配结果创建一个矩形区域</c>
<l>    gen_rectangle1(Rectangle1, Row - 0.5*height, Column - 0.5*width, Row + 0.5*height, Column + 0.5*width)</l>
<l>    dev_display(Rectangle1)</l>
<l>    dev_disp_text('count: ' + Length, 'window', 10, 10, 'black', [], [])</l>
<l>    stop()</l>
<l>endfor</l>
<l>count_seconds(shape_t2)</l>
<l>shape_time := shape_t2 - shape_t1</l>
<c></c>
<l>dev_disp_text('基于形状的匹配结束！耗时：' + shape_time, 'window', 10, 10, 'black', [], [])</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
