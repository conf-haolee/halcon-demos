<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="20.11.1.0">
<procedure name="main">
<interface/>
<body>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2]" as_ord="1">list_files ('D:/GXNU/1.404实验室/研究方向1：遮挡橡胶圈视觉计数/Count_Data_Set/green_circle', ['files','follow_links'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="1">tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima|hobj)$','ignore_case'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">for Index := 0 to |ImageFiles| - 1 by 1</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    read_image (Image, ImageFiles[Index])</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<l>    get_image_size (Image, Width, Height)</l>
<l>    dev_open_window (0, 0, Width /4 , Height/4, 'black', WindowHandle)</l>
<c>    </c>
<l>    dev_set_window(WindowHandle)</l>
<l>    set_display_font (WindowHandle, 16, 'mono', 'true', 'false')</l>
<c>    </c>
<c>    * 预处理图像</c>
<l>    rgb1_to_gray (Image, GrayImage)</l>
<l>    threshold(GrayImage, Region, 0, 130)</l>
<l>    connection(Region, ConnectedRegions)</l>
<l>    gen_contour_region_xld (ConnectedRegions, Contours, 'border')</l>
<l>    count_obj(Contours,Number)</l>
<c>    </c>
<c>    * 遍历Blob 数量</c>
<l>    for j := 1 to Number by 1</l>
<l>        select_obj(Contours, ObjectSelected, j)</l>
<l>        get_contour_xld(ObjectSelected, Row, Col)</l>
<l>        tuple_length(Row, ContourNums)</l>
<l>        if(ContourNums &lt; 10)</l>
<l>              dev_disp_text ('轮廓太短', 'window', Row2 /4, Column2 / 4, 'red', [], [])  </l>
<l>        endif</l>
<c>        </c>
<l>        select_obj(ConnectedRegions,regionObjectSelected,j) </l>
<l>        smallest_rectangle1 (regionObjectSelected,Row1, Column1, Row2, Column2)</l>
<c>        </c>
<l>        dev_display (GrayImage)</l>
<l>        dev_set_color('red')</l>
<l>        dev_display(Contours)</l>
<l>*         dev_disp_text (ContourNums, 'window', Row2 /4, Column2 / 4, 'red', [], [])</l>
<c>        </c>
<c>        * 定义线长</c>
<l>        lineSize := 10</l>
<l>        k := 0</l>
<l>        CoutourSize := ContourNums - 1</l>
<c>        </c>
<c>        * 遍历每一个 轮廓点</c>
<l>        for k := 0 to CoutourSize by 1</l>
<l>            for j := 3 to 20 by 1</l>
<c>                </c>
<c>                </c>
<l>            endfor</l>
<l>            if(k &lt; lineSize)</l>
<l>                frontPointRow := Row[CoutourSize - lineSize + k]</l>
<l>                frontPointCol := Col[CoutourSize - lineSize + k]</l>
<l>            else</l>
<l>                frontPointRow := Row[k - lineSize]</l>
<l>                frontPointCol := Col[k - lineSize]   </l>
<l>            endif</l>
<l>            if( k + lineSize &gt; CoutourSize)</l>
<l>                nextPointRow := Row[lineSize + k - CoutourSize ]</l>
<l>                nextPointCol := Col[lineSize + k - CoutourSize]</l>
<l>            else</l>
<l>                nextPointRow := Row[lineSize + k]</l>
<l>                nextPointCol := Col[lineSize + k]</l>
<l>            endif</l>
<c>            </c>
<l>            currentPointRow := Row[k]</l>
<l>            currentPointCol := Col[k]</l>
<c>            </c>
<l>            angle_ll(currentPointRow,currentPointCol,frontPointRow,frontPointCol,currentPointRow,currentPointCol,nextPointRow,nextPointCol,angle)</l>
<l>            gen_contour_polygon_xld (Line1, [currentPointRow,frontPointRow], [currentPointCol,frontPointCol])</l>
<l>            gen_contour_polygon_xld (Line2, [currentPointRow,nextPointRow],[currentPointCol,nextPointCol])</l>
<l>            dev_set_color('red')</l>
<l>            dev_display(ObjectSelected)</l>
<l>            dev_set_color('green')</l>
<l>            dev_display(Line1)</l>
<l>            dev_display(Line2)</l>
<l>            tuple_deg(angle,Deg)</l>
<c>            </c>
<l>*             tuple_string(angle,'0',strAngle)</l>
<c>            </c>
<l>*             Filename:='E:/output.txt'</l>
<l>*             open_file (Filename,'input',FileHandle)</l>
<l>*             fwrite_string(FileHandle,strAngle + ',' )</l>
<l>*             close_file(FileHandle)</l>
<c></c>
<l>        endfor</l>
<l>        stop()</l>
<l>    endfor</l>
<l>    stop()</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endfor</l>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
