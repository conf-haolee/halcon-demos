<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="20.11.1.0">
<procedure name="main">
<interface/>
<body>
<l>* read_image (Test01, 'E:/TempE/Desktop/testImage/test01.bmp')</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2]" as_ord="1">list_files ('D:/GXNU/1.404实验室/研究方向1：遮挡橡胶圈视觉计数/Count_Data_Set/green_circle', ['files','follow_links'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="1">tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima|hobj)$','ignore_case'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">for Index := 0 to |ImageFiles| - 1 by 1</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    read_image (Image, ImageFiles[Index])</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<l>    get_image_size (Image, Width, Height)</l>
<l>    dev_close_window()</l>
<l>    dev_open_window (50, 50, Width / 3, Height /3, 'black', WindowHandle)</l>
<c>    </c>
<l>    rgb1_to_gray (Image, GrayImage)</l>
<l>    threshold(GrayImage, Region, 0, 120)</l>
<l>    connection(Region, ConnectedRegions)</l>
<l>    stop()</l>
<l>    shape_trans(ConnectedRegions, RegionTrans, 'convex')</l>
<c>    </c>
<l>    stop()</l>
<l>    dev_set_color('green')</l>
<l>    gen_contour_region_xld (ConnectedRegions, Contours, 'border')</l>
<l>*     stop()</l>
<c>    </c>
<l>    count_obj(Contours,Number)</l>
<l>    count_obj(ConnectedRegions,Number1)</l>
<c>    </c>
<l>    for index :=1 to Number by 1</l>
<l>        select_obj(Contours, ObjectSelected, index)</l>
<l>        select_obj(ConnectedRegions, ObjectAreaSelected,index)</l>
<c>        * 计算每个blob 轮廓的凸度值</c>
<l>        convexity_xld(ObjectSelected, Convexity)</l>
<l>        get_contour_xld(ObjectSelected,Row, Col)</l>
<l>        tuple_length(Row,lenght)</l>
<c>        </c>
<c></c>
<l>        area_center (ObjectAreaSelected, Area, Row1, Column)</l>
<l>        area_holes (ObjectAreaSelected, holeArea)</l>
<c>        * 计算空洞数量</c>
<l>        connect_and_holes(ObjectAreaSelected,NumConnected,NumHoles)</l>
<c>        </c>
<l>        if ((holeArea &gt;20 and Convexity &lt; 0.95) or Area &gt; 9100)</l>
<l>*             smallest_circle (ObjectSelected,Row1, Column, Radius)</l>
<l>            smallest_rectangle1(ObjectAreaSelected,Row11, Column1, Row2, Column2)</l>
<l>            dev_set_draw('margin')</l>
<l>            dev_set_color('red')</l>
<l>            gen_rectangle1 (Rectangle, Row11, Column1, Row2, Column2)</l>
<l>            tuple_string(Convexity,'.2f',Str_Convexity)</l>
<l>            dev_disp_text ('孔洞数: ' + NumHoles , 'window', Row2/3, Column2/3, 'black', [], [])</l>
<l>            * dev_disp_text ('凸度: ' + Str_Convexity +' 面积:' +Area, 'window', Row2/3, Column2/3, 'black', [], [])</l>
<l>            stop()</l>
<c>            </c>
<l>        endif</l>
<c>        </c>
<c>        </c>
<c>        </c>
<l>    endfor</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endfor</l>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
