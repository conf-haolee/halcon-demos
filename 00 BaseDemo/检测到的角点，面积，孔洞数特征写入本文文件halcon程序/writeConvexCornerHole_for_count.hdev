<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="20.11.1.0">
<procedure name="main">
<interface/>
<body>
<c></c>
<c>* 循环读取五类圆环 的三个特征值凸度，角点数，空洞数量,空洞面积</c>
<l>for num_i:= 2 to 5 by 1</l>
<c>    * 数字转字符串</c>
<l>    tuple_string(num_i,'0',str_num_i)</l>
<l>    true_count:= 0</l>
<c>    * Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l>    list_files ('D:/GXNU/9.ImageSet/8.torus-simulate-n8000-c5/03 render_bmp/circle_' + str_num_i, ['files','follow_links'], ImageFiles)</l>
<l>    tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima|hobj)$','ignore_case'], ImageFiles)</l>
<c>    </c>
<l>    path := 'D:/GXNU/9.ImageSet/8.torus-simulate-n8000-c5/03 render_bmp/' + 'circle' + num_i + '.FeatureValue.txt'</l>
<l>    open_file(path,'output', FileHandle)</l>
<l>    fwrite_string(FileHandle, 'Area Convexity HolesNum validHarrisNum label')</l>
<l>    fnew_line(FileHandle)</l>
<l>    for Index := 0 to |ImageFiles| - 1 by 1</l>
<l>        read_image (Image, ImageFiles[Index])</l>
<l>        rgb1_to_gray (Image, GrayImage)</l>
<l>        threshold(GrayImage, Region, 0, 120)</l>
<l>        connection(Region, ConnectedRegions)</l>
<l>*         stop()</l>
<c>        * 计算面积</c>
<l>        area_center(ConnectedRegions,Area, Row, Column)</l>
<c>        * 面积写入文件</c>
<l>        fwrite_string(FileHandle, Area)</l>
<l>        fwrite_string(FileHandle, ' ')</l>
<c>        * 将分离的连通域 转换为轮廓</c>
<l>        shape_trans(ConnectedRegions, RegionTrans, 'convex')</l>
<l>        gen_contour_region_xld (ConnectedRegions, Contours, 'border')</l>
<c>        * 计算轮廓凸度</c>
<l>        convexity_xld(Contours, Convexity)</l>
<c>        * 凸度写入文件</c>
<l>        fwrite_string(FileHandle, Convexity)</l>
<l>        fwrite_string(FileHandle, ' ')</l>
<c>        </c>
<c>        * 生成填充区域</c>
<l>        fill_up(ConnectedRegions, RegionFillUp)</l>
<c>        * 计算有效空洞数量 与 空洞面积</c>
<l>        hole_num := 0</l>
<l>        difference(RegionFillUp, ConnectedRegions, RegionDifference)</l>
<l>        connection(RegionDifference, DiffConnectedRegions)</l>
<l>        count_obj(DiffConnectedRegions, Number)</l>
<l>        for Index1 := 1 to Number by 1</l>
<l>            select_obj(DiffConnectedRegions, ObjectSelected, Index1)</l>
<l>            area_center(ObjectSelected,Area1, Row1, Column1)</l>
<c>            * 空洞数量面积 &gt; 99 才算数</c>
<l>            if(Area1 &gt; 99)</l>
<l>                hole_num:= hole_num + 1</l>
<l>            endif</l>
<l>        endfor</l>
<c>        </c>
<l>        connect_and_holes(ConnectedRegions,NumConnected,NumHoles)</l>
<l>*         stop() </l>
<l>        area_holes (ConnectedRegions, holeArea)</l>
<c>        * 写入空洞数量 换行   </c>
<l>        fwrite_string(FileHandle, hole_num)</l>
<c>        * 孔洞面积取消 没用的参数</c>
<l>*         fwrite_string(FileHandle, ' ')</l>
<l>*         fwrite_string(FileHandle, holeArea)</l>
<l>        fwrite_string(FileHandle, ' ')</l>
<c>        * 设置参数</c>
<l>        SigmaGrad := 1.0</l>
<l>        SigmaSmooth := 2.0</l>
<l>        Threshold := 1000000</l>
<l>        PointRange := 3</l>
<l>        harrisLocalRow := []</l>
<l>        harrisLocalCol := []</l>
<c>        * 算出原始轮廓点</c>
<l>        points_harris (Image, SigmaGrad, SigmaSmooth, 0.04, Threshold, Row, Col)</l>
<c>        </c>
<c>        * step4 对harris 角点进行筛选</c>
<l>        tuple_length(Row,localHarrisLength)</l>
<l>        if(localHarrisLength &gt; 0)</l>
<l>            for i := 1 to localHarrisLength by 1</l>
<l>                distance_pr(RegionFillUp, Row[i-1], Col[i-1], DistanceMin, DistanceMax)</l>
<l>                if(DistanceMin &gt; 1)</l>
<l>                    harrisLocalRow := [harrisLocalRow,Row[i-1]]</l>
<l>                    harrisLocalCol := [harrisLocalCol,Col[i-1]]</l>
<l>                endif</l>
<l>            endfor</l>
<c>            </c>
<l>        endif </l>
<l>        tuple_length(harrisLocalRow,validHarrisNum)</l>
<c>        * 写入有效角点数量</c>
<l>        fwrite_string(FileHandle, validHarrisNum)</l>
<l>        fwrite_string(FileHandle, ' ')</l>
<l>        fwrite_string(FileHandle, str_num_i)</l>
<l>        fnew_line(FileHandle)</l>
<l>        gen_cross_contour_xld (Cross, harrisLocalRow, harrisLocalCol, 6, rad(45))</l>
<l>*         stop()</l>
<l>*         count_obj(Contours,Number)</l>
<l>*         count_obj(ConnectedRegions,Number1)</l>
<l>*         for index :=1 to Number by 1</l>
<l>*             select_obj(Contours, ObjectSelected, index)</l>
<l>*             select_obj(ConnectedRegions, ObjectAreaSelected,index)</l>
<c>            * 计算每个blob 轮廓的凸度值</c>
<l>*             convexity_xld(ObjectSelected, Convexity)</l>
<l>*             get_contour_xld(ObjectSelected,Row, Col)</l>
<l>*             tuple_length(Row,lenght)</l>
<c>            </c>
<l>*             area_center (ObjectAreaSelected, Area, Row1, Column)</l>
<l>*             area_holes (ObjectAreaSelected, holeArea)</l>
<c>            * 计算空洞数量</c>
<l>*             connect_and_holes(ObjectAreaSelected,NumConnected,NumHoles)</l>
<c>            </c>
<l>*             if ((holeArea &gt;20 and Convexity &lt; 0.95) or Area &gt; 9100)</l>
<l>*                 smallest_circle (ObjectSelected,Row1, Column, Radius)</l>
<l>*                 smallest_rectangle1(ObjectAreaSelected,Row11, Column1, Row2, Column2)</l>
<l>*                 dev_set_draw('margin')</l>
<l>*                 dev_set_color('red')</l>
<l>*                 gen_rectangle1 (Rectangle, Row11, Column1, Row2, Column2)</l>
<l>*                 tuple_string(Convexity,'.2f',Str_Convexity)</l>
<l>*                 dev_disp_text ('孔洞数: ' + NumHoles , 'window', Row2/3, Column2/3, 'black', [], [])</l>
<l>                * dev_disp_text ('凸度: ' + Str_Convexity +' 面积:' +Area, 'window', Row2/3, Column2/3, 'black', [], [])</l>
<l>*                 stop()</l>
<c>                </c>
<l>*             endif </l>
<l>*         endfor</l>
<l>    endfor</l>
<l>    close_file(FileHandle)</l>
<c></c>
<l>endfor</l>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
